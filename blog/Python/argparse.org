#+TITLE:       argparse
#+AUTHOR:      pinvon
#+EMAIL:       pinvon@t480
#+DATE:        2019-03-28 四

#+URI:         /blog/Python/%y/%m/%d/%t/ Or /blog/Python/%t/
#+TAGS:        Python
#+DESCRIPTION: <Add description here>

#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:t

* 基本用法

#+BEGIN_EXAMPLE
import argparse
parser = argparse.ArgumentParser()
parser.parse_args()
#+END_EXAMPLE

输出:
#+BEGIN_EXAMPLE
$ python3 prog.py


$ python3 prog.py --help
usage: prog.py [-h]

optional arguments:
  -h, --help  show this help message and exit


$ python3 prog.py --verbose
usage: prog.py [-h]
prog.py: error: unrecognized arguments: --verbose


$ python3 prog.py foo
usage: prog.py [-h]
prog.py: error: unrecognized arguments: foo
#+END_EXAMPLE

** 基本用法

*** 必选参数

必选参数的意思就是不用输入类似 "-v xxx" 的语句就可以获取到参数.

#+BEGIN_EXAMPLE
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("echo")
args = parser.parse_args()
print(args.echo)
#+END_EXAMPLE

输出:
#+BEGIN_EXAMPLE
$ python3 prog.py
usage: prog.py [-h] echo
prog.py: error: the following arguments are required: echo
$ python3 prog.py --help
usage: prog.py [-h] echo

positional arguments:
  echo

optional arguments:
  -h, --help  show this help message and exit


$ python3 prog.py foo
foo
#+END_EXAMPLE

** 可选参数

可选参数有两种:
1. 短参数, 形如: "-v xxx"
2. 长参数, 形如: "--verbosity xxx"

#+BEGIN_EXAMPLE
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--verbosity", help="increase output verbosity")
args = parser.parse_args()
if args.verbosity:
    print("verbosity turned on")
#+END_EXAMPLE

输出:
#+BEGIN_EXAMPLE
$ python3 prog.py --verbosity 1
verbosity turned on


$ python3 prog.py -v 1
verbosity turned on


$ python3 prog.py --verbosity
usage: prog.py [-h] [--verbosity VERBOSITY]
prog.py: error: argument --verbosity: expected one argument
#+END_EXAMPLE
可选的意思是你可以不填 -v 选项, 但是如果写了 -v, 对应的值一定要给.

** 禁止指定参数值

通过 action="store_true" 来禁止指定参数值.

#+BEGIN_EXAMPLE
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--verbose", help="increase output verbosity",
                    action="store_true")
args = parser.parse_args()
if args.verbose:
    print("verbosity turned on")
#+END_EXAMPLE

输出:
#+BEGIN_EXAMPLE
$ python3 prog.py --verbose
verbosity turned on


$ python3 prog.py --verbose 1
usage: prog.py [-h] [--verbose]
prog.py: error: unrecognized arguments: 1
#+END_EXAMPLE
此时, 有写 --verbose 表示值为 True, 不写 --verbose 表示值为 False.

** 指定类型

#+BEGIN_EXAMPLE
arser = argparse.ArgumentParser()
parser.add_argument('x', type=int, help="the base")
args = parser.parse_args()
answer = args.x ** 2
print(answer)
#+END_EXAMPLE

** 选择某个值

#+BEGIN_EXAMPLE
parser = argparse.ArgumentParser()
parser.add_argument("square", type=int,
                    help="display a square of a given number")
parser.add_argument("-v", "--verbosity", type=int, choices=[0, 1, 2],
                    help="increase output verbosity")
args = parser.parse_args()
answer = args.square**2
if args.verbosity == 2:
    print("the square of {} equals {}".format(args.square, answer))
elif args.verbosity == 1:
    print("{}^2 == {}".format(args.square, answer))
else:
    print(answer)
#+END_EXAMPLE
使用 choices 表示只能在这里选择值, 输入其他值会出错.

** 自定义帮助信息

使用 help 参数.
#+BEGIN_EXAMPLE
parser.add_argument("square", type=int, help="display a square of a given number")
#+END_EXAMPLE

** 自定义程序帮助信息

在 ArgumentParser 中使用 description 参数.
#+BEGIN_EXAMPLE
argparse.ArgumentParser(description="calculate X to the power of Y")
#+END_EXAMPLE

** 互斥参数

#+BEGIN_EXAMPLE
group = parser.add_mutually_exclusive_group()
group.add_argument("-v", "--verbose", action="store_true")
group.add_argument("-q", "--quiet", action="store_true")
#+END_EXAMPLE
互斥参数表示: -v -q 不可同时出现.

** 参数默认值

#+BEGIN_EXAMPLE
parser.add_argument("-v", "--verbosity", type=int, choices=[0, 1, 2], default=1,
                    help="increase output verbosity")
#+END_EXAMPLE
使用 default 来指定默认值.
