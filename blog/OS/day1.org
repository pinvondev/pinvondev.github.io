#+TITLE:       1 从计算机结构到汇编程序入门
#+AUTHOR:      pinvon
#+EMAIL:       pinvon@ubuntu
#+DATE:        2018-03-06 二
#+URI:         /blog/%y/%m/%d/从计算机结构到汇编程序入门
#+KEYWORDS:    <TODO: insert your keywords here>
#+TAGS:        30天自制操作系统-读书笔记
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: <TODO: insert your description here>

* CPU

CPU是个集成电路板, 仅执行电信号给它的指令, 输出相应的电信号. 电信号只有开、关两种状态. CPU只会机械地进行电信号的交换. 那么, CPU是如何通过两种状态来做众多的事情的呢?

例子: 如果用1来表示电信号开状态, 0表示电信号关状态, 则可以用 $32 \times 16 = 512$ 个开和关的集合, 来显示一个人的头像. 如下所示:
[[./0.png]]

再如, BOOK这个单词在电脑内部保存时, 是使用 =0100 1011 0100 1111 0100 1111 0100 0010= 这32个电信号的.

一开始, 人们发明CPU只是为了处理电信号, 后来发现电信号可以用数字0和1对应, 于是可以将二进制数转换为电信号, 同时电信号也能转换为二进制数, 由于二进制数与十进制数可以转换, 所以发明了普通的计算机. 

后来, 人们发现只要给每个文字都编上号(文字编码), 就可以建立文字与数字的对应关系, 从而文字也可以与电信号互相转换. 依此类推, 人们又找到了将图像音乐等转换成电信号的方法, 使CPU的应用范围越来越广. 具体, 可以看计算机组成原理中的外围设备的介绍.

* 术语介绍

启动区: 软盘的第一个扇区. 计算机读写软盘的时候, 不是一字节一字节读写的, 而是以512字节为一个单位进行读写的, 这512B就称为一个扇区. 计算机首先从最初的一个扇区开始读软盘, 然后检查这个扇区最后2个字节的内容, 如果最后2个字节不是55AA, 则计算机会认为这张盘上没有所需的启动程序, 就会报一个不能启动的错误.

IPL(initial program loader): 启动程序加载器. 由于第一个扇区只有512B, 几乎所有OS都不会这么小, 所以他们把加载OS的程序放在启动区里, OS本身放在后面. 所以, 有时也把启动区称为IPL.
